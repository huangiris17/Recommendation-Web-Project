{"ast":null,"code":"var _jsxFileName = \"/Users/Iris/Desktop/Grad School/CS/Udemy MERN/Frontend/react-frontend-01-starting-setup/src/places/pages/UpdatePlace.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nconst DUMMY_PLACES = [{\n  id: \"p1\",\n  title: \"Empire State Buiding\",\n  description: \"Sky scrapper in NYC\",\n  imageUrl: \"https://www.esbnyc.com/sites/default/files/2020-01/ESB%20Day.jpg\",\n  address: \"20 W 34th St., New York, NY 10001, United States\",\n  location: {\n    lat: 40.7484405,\n    lng: -73.9856644\n  },\n  creator: \"u1\"\n}, {\n  id: \"p2\",\n  title: \"Empire State Buiding\",\n  description: \"Sky scrapper in NYC\",\n  imageUrl: \"https://www.esbnyc.com/sites/default/files/2020-01/ESB%20Day.jpg\",\n  address: \"20 W 34th St., New York, NY 10001, United States\",\n  location: {\n    lat: 40.7484405,\n    lng: -73.9856644\n  },\n  creator: \"u2\"\n}];\nfunction UpdatePlace(props) {\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Place Not Found\"));\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: () => {},\n    value: identifiedPlace.title,\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Description\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description.\",\n    onInput: () => {},\n    value: identifiedPlace.description,\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"UPDATE PLACE\"));\n}\nexport default UpdatePlace;","map":{"version":3,"names":["React","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","props","placeId","identifiedPlace","find","p","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","element","type","label","validators","errorText","onInput","value","valid","disable"],"sources":["/Users/Iris/Desktop/Grad School/CS/Udemy MERN/Frontend/react-frontend-01-starting-setup/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\n\nconst DUMMY_PLACES = [\n  {\n    id: \"p1\",\n    title: \"Empire State Buiding\",\n    description: \"Sky scrapper in NYC\",\n    imageUrl:\n      \"https://www.esbnyc.com/sites/default/files/2020-01/ESB%20Day.jpg\",\n    address: \"20 W 34th St., New York, NY 10001, United States\",\n    location: {\n      lat: 40.7484405,\n      lng: -73.9856644,\n    },\n    creator: \"u1\",\n  },\n  {\n    id: \"p2\",\n    title: \"Empire State Buiding\",\n    description: \"Sky scrapper in NYC\",\n    imageUrl:\n      \"https://www.esbnyc.com/sites/default/files/2020-01/ESB%20Day.jpg\",\n    address: \"20 W 34th St., New York, NY 10001, United States\",\n    location: {\n      lat: 40.7484405,\n      lng: -73.9856644,\n    },\n    creator: \"u2\",\n  },\n];\n\nfunction UpdatePlace(props) {\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n  if (!identifiedPlace) {\n    return (\n      <div className=\"center\">\n        <h2>Place Not Found</h2>\n      </div>\n    );\n  }\n  return (\n    <form className=\"place-form\">\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={() => {}}\n        value={identifiedPlace.title}\n        valid={true}\n      />\n      <Input\n        id=\"description\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Description\"\n        validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description.\"\n        onInput={() => {}}\n        value={identifiedPlace.description}\n        valid={true}\n      />\n      <Button type=\"submit\" disable={true}>\n        UPDATE PLACE\n      </Button>\n    </form>\n  );\n}\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}