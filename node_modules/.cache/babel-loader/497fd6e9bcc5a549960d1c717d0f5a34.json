{"ast":null,"code":"import { useCallback, useReducer } from \"react\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n};","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch"],"sources":["/Users/Iris/Desktop/Grad School/CS/Udemy MERN/Frontend/react-frontend-01-starting-setup/src/shared/hooks/form-hook.js"],"sourcesContent":["import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAClC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;UAC9BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC7C,CAAC,MAAM;UACLH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACE,OAAO;QAC5D;MACF;MACA,OAAO;QACL,GAAGN,KAAK;QACRK,MAAM,EAAE;UACN,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAG;YAAEG,KAAK,EAAEN,MAAM,CAACM,KAAK;YAAED,OAAO,EAAEL,MAAM,CAACK;UAAQ;QACnE,CAAC;QACDA,OAAO,EAAEH;MACX,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMQ,OAAO,GAAGA,CAACC,aAAa,EAAEC,mBAAmB,KAAK;EAC7D,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACC,WAAW,EAAE;IACpDM,MAAM,EAAEI,aAAa;IACrBH,OAAO,EAAEI;EACX,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}